/*
 * Copyright 2013-2014 @BijdorpStudio
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
  repositories {
    maven { url 'http://download.crashlytics.com/maven' }
    jcenter()
  }

  dependencies {
    classpath 'com.android.tools.build:gradle:1.2.3'
    classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.16.0'
    classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.12.0'
    classpath 'com.github.ben-manes:gradle-versions-plugin:0.10.1'
    classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.4.0'
  }
}

apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.application'
apply plugin: 'crashlytics'
apply plugin: 'com.github.ben-manes.versions'

repositories {
  maven { url 'http://download.crashlytics.com/maven' }
  maven { url 'http://maven.google.com' }
  jcenter()
}

android {
  compileSdkVersion 21
  buildToolsVersion "22.0.1"

  defaultConfig {
    minSdkVersion 9
    targetSdkVersion 21

    versionCode 11
    versionName "1.2"
  }

// Load signing keys only for release
  signingConfigs {
    release {
      if ( rootProject.file( 'keys/sign.properties' ).exists() )
      {
        Properties p = new Properties()
        p.load( new FileInputStream( rootProject.file( 'keys/sign.properties' ) ) )

        storeFile file( p.file )
        storePassword p.password
        keyAlias p.alias
        keyPassword p.keyPassword
      }
    }
  }

  buildTypes {
    release {
      signingConfig signingConfigs.release
      testCoverageEnabled false
    }

    debug {
      testCoverageEnabled true
    }
  }

  lintOptions {
    abortOnError false
  }
}

dependencies {
  // Android
  compile 'com.android.support:support-v4:22.1.1'
  compile 'com.android.support:appcompat-v7:22.1.1'
  // Square
  compile 'com.squareup.okhttp:okhttp:2.4.0'
  compile 'com.squareup:otto:1.3.7'
  provided 'com.squareup.dagger:dagger-compiler:1.2.2'
  compile 'com.squareup.dagger:dagger:1.2.2'
  // Jake Wharton
  compile 'com.jakewharton:disklrucache:2.0.2'
  // Crashlytics
  compile 'com.crashlytics.android:crashlytics:1.1.13'
  // MixPanel
  compile 'com.mixpanel.android:mixpanel-android:4.5.1@aar'

  // AS tests
  testCompile 'junit:junit:4.12'
  testCompile 'org.robolectric:robolectric:2.4'
  testCompile 'com.squareup:fest-android:1.0.8'
  testCompile 'org.mockito:mockito-all:1.10.17'
  testCompile 'org.easytesting:fest-assert-core:2.0M10'
}

apply plugin: 'jacoco'

jacoco {
  toolVersion = "0.7.1.201405082137"
}

def coverageSourceDirs = ['src/main/java']

task jacocoTestReport( type: JacocoReport, dependsOn: "testDebug" ) {
  group = "Reporting"

  description = "Generate Jacoco coverage reports"

  classDirectories = fileTree( dir: 'build/intermediates/classes/debug',
                               excludes: ['**/R.class',
                                          '**/R$*.class',
                                          '**/inject/*',
                                          '**/*$InjectAdapter.*',
                                          '**/BuildConfig.*',
                                          '**/Manifest*.*',] )

  additionalSourceDirs = files( coverageSourceDirs )
  sourceDirectories = files( coverageSourceDirs )
  executionData = files( 'build/jacoco/testDebug.exec' )

  reports {
    xml.enabled = true
    html.enabled = true
    csv.enabled = false
  }
}

apply plugin: 'com.github.kt3k.coveralls'

coveralls {
  sourceDirs = files( ['src/main/java'] ).files.absolutePath
  jacocoReportPath = 'build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml'
}

task wrapper( type: Wrapper ) {
  gradleVersion = '2.4'
}
